apiVersion: v1
kind: Service
metadata:
  labels:
    app: mysql
  name: mysql-svc
  namespace: <namespace>
spec:
  ports:
  - name: "mysql-port"
    port: 3306
    targetPort: 3306
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: <namespace>
spec:
  serviceName: "mysql"
  selector:
    matchLabels:
      app: mysql
  replicas: 1 
  template:
    metadata:
      labels:
        app: mysql
    spec:   
      tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "app"
        effect: "NoSchedule"   
      containers:
      - image: stakater/mysql-backup-restore-s3:0.0.1
        name: mysql-backup-restore
        volumeMounts:
        - mountPath: /backup
          name: mysql-pvc    
        env:
        - name: MYSQL_DB
          value: "restore-db-name"
        - name: CRON_TIME
          value: "0 */1 * * *"
        - name: MYSQL_USER
          value: "root"
        - name: MYSQL_PASS
          valueFrom:
            secretKeyRef:
              name: mysql
              key: mysql-root-password
        - name: S3_BUCKET_NAME
          valueFrom:
            secretKeyRef:
              name: aws-secrets
              key: mysql_bucket
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-secrets
              key: aws_access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-secrets
              key: aws_secret_access_key
        - name: AWS_DEFAULT_REGION
          valueFrom:
            secretKeyRef:
              name: aws-secrets
              key: aws_default_region
        - name: MYSQL_HOST
          value: "127.0.0.1"
        - name: MYSQL_PORT
          value: "3306"
        - name: RESTORE
          value: "false"
      - image: mysql:5.7
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql
              key: mysql-root-password
        ports:
        - containerPort: 3306
          name: tcp
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-pvc
        resources: {}          
  volumeClaimTemplates:
  - metadata:
      name: mysql-pvc
    spec:
      accessModes: [ "ReadWriteMany" ]
      storageClassName: efs
      resources:
        requests:
          storage: 2Gi
